{
  "esnext": true,
  "fileExtensions": [".js"],
  "excludeFiles": [
    "node_modules/**",
    "bower_components/**",
    "dist/**",
    "webpack.config.js"
  ],

  "validateIndentation": "\t",
  "disallowMixedSpacesAndTabs": "smart",
  "disallowTrailingWhitespace": true,
  "validateLineBreaks": "LF",
  "requireLineFeedAtFileEnd": true,
  "disallowMultipleSpaces": true,
  "maximumLineLength": {
    "value": 120,
    "allowComments": true
  },

  "disallowYodaConditions": true,
  "validateQuoteMarks": "'",
  "requireSemicolons": true,

  "disallowIdenticalDestructuringNames": true,
  "requireEnhancedObjectLiterals": true,
  "requireObjectDestructuring": true,
  "requireNumericLiterals": true,
  "requireSpread": true,
  "requireArrowFunctions": true,
  "requireParenthesesAroundArrowParam": true,
  "requireShorthandArrowFunctions": true,

  "requireSpaceAfterComma": true,
  "disallowSpaceBeforeComma": true,
  "disallowTrailingComma": true,
  "requireCommaBeforeLineBreak": true,
  "disallowSpaceBeforeSemicolon": true,
  "disallowMultipleLineStrings": true,
  "disallowMultipleLineBreaks": true,

  "disallowSpacesInsideParentheses": true,
  "disallowSpacesInsideParenthesizedExpression": true,
  "disallowSpacesInsideBrackets": true,
  "disallowSpaceAfterObjectKeys": true,
  "requireSpaceBeforeObjectValues": true,
  "requireBlocksOnNewline": {
    "includeComments": true
  },

  "requireCapitalizedComments": true,
  "requireSpaceAfterLineComment": {
    "allExcept": [
      "#",
      "=",
      "#include",
      "#without",
      "#label",
      "#endlabel",
      "#if",
      "#endif",
      "#unless",
      "#endunless",
      "#set",
      "#unset",
      "#end"
    ]
  },

  "requirePaddingNewLinesAfterUseStrict": true,
  "validateNewlineAfterArrayElements": true,
  "requireLineBreakAfterVariableAssignment": true,
  "requirePaddingNewLinesAfterBlocks": {
    "allExcept": [
      "inCallExpressions",
      "inNewExpressions",
      "inArrayExpressions",
      "inProperties"
    ]
  },

  "requireSpaceBeforeBlockStatements": true,
  "disallowNewlineBeforeBlockStatements": true,
  "requireSpacesInForStatement": true,
  "requireSpaceBeforeBinaryOperators": true,
  "requireSpaceAfterBinaryOperators": true,
  "requireSpaceBetweenArguments": true,
  "disallowSpacesInCallExpression": true,

  "jsDoc": {
    "checkAnnotations": {
      "preset": "jsdoc3",
      "extra": {
        "template": true,
        "decorator": false,
        "inheritDoc": false,
        "override": false
      }
    },
    "checkTypes": "strictNativeCase",
    "checkParamNames": true,
    "requireHyphenBeforeDescription": true
  },

  "requireCurlyBraces": [
    "if",
    "else",
    "for",
    "while",
    "do",
    "try",
    "catch"
  ],

  "requireSpaceAfterKeywords": [
    "do",
    "for",
    "if",
    "else",
    "switch",
    "case",
    "try",
    "catch",
    "finally",
    "void",
    "while",
    "return",
    "typeof",
    "function"
  ],

  "disallowKeywords": [
    "var",
    "with"
  ],

  "disallowKeywordsOnNewLine": [
    "else",
    "catch",
    "finally",
    "while"
  ],

  "disallowNestedTernaries": {
    "maxLevel": 1
  },

  "requireCapitalizedConstructors": true,
  "requireCamelCaseOrUpperCaseIdentifiers": true,
  "disallowSpacesInGenerator": {
    "beforeStar": true
  },

  "disallowSpaceAfterPrefixUnaryOperators": true,
  "disallowSpaceBeforePostfixUnaryOperators": [
    "++",
    "--"
  ],

  "disallowOperatorBeforeLineBreak": [
    "~",
    "."
  ],

  "validateAlignedFunctionParameters": true,
  "requireSpacesInFunctionDeclaration": {
    "beforeOpeningCurlyBrace": true
  },

  "disallowSpacesInFunctionDeclaration": {
    "beforeOpeningRoundBrace": true
  },

  "requireSpacesInAnonymousFunctionExpression": {
    "beforeOpeningRoundBrace": true,
    "beforeOpeningCurlyBrace": true,
    "allExcept": ["shorthand"]
  },

  "disallowSpacesInNamedFunctionExpression": {
    "beforeOpeningRoundBrace": true
  },

  "requireSpacesInNamedFunctionExpression": {
    "beforeOpeningCurlyBrace": true
  },

  "requireSpacesInConditionalExpression": {
    "afterTest": true,
    "beforeConsequent": true,
    "afterConsequent": true,
    "beforeAlternate": true
  },

  "disallowSpaceBeforeBinaryOperators": [
    ","
  ],

  "disallowImplicitTypeConversion": [
    "numeric",
    "string",
    "binary",
    "boolean"
  ]
}
